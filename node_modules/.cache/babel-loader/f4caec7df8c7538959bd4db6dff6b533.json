{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CX\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\Card.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = _ref => {\n  let {\n    results,\n    page\n  } = _ref;\n  let display;\n  console.log(results);\n  if (results) {\n    display = results.map(char => {\n      let {\n        id,\n        name,\n        image,\n        location,\n        status\n      } = char;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: `${page}${id}`,\n        className: \"col-lg-4 col-md-6 col12  mb-4 position-relative text-subtle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-6\",\n                children: \"\\xDAltima ubicaci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-5\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), (() => {\n          //si el estado del persona esta muerto entonces vamos a devolver algo aqui\n          if (status === \"Dead\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 22\n            }, this);\n          } else if (status === \"Alive\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 22\n            }, this);\n          }\n        })()]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    display = \" No Characters Found :/\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n_c = Cards;\nexport default Cards;\n\n// export default function Card({ image, name, temperaments, weight }) {\n//   return (\n//     <div>\n//       <img src={image} alt=\"img not found\" width=\"200px\" height=\"250px\" />\n//       <h3>{name}</h3>\n//       <h5>{temperaments}</h5>\n//       <h5>{weight}</h5>\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_ref","results","page","display","console","log","map","char","id","name","image","location","status","style","textDecoration","color","to","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CX/OneDrive/Escritorio/PI-Dogs-main/client/src/components/Card.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cards = ({ results, page }) => {\r\n  let display;\r\n  console.log(results);\r\n\r\n  if (results) {\r\n    display = results.map((char) => {\r\n      let { id, name, image, location, status } = char;\r\n      return (\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"white\" }}\r\n          to={`${page}${id}`}\r\n          key={id}\r\n          className=\"col-lg-4 col-md-6 col12  mb-4 position-relative text-subtle\"\r\n        >\r\n          <div>\r\n            <img src={image} alt=\"\" />\r\n            <div className=\"content\">\r\n              <div className=\"\">\r\n                <div className=\"fs-6\">Última ubicación</div>\r\n                <div className=\"fs-5\">{location.name}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {(() => {\r\n            //si el estado del persona esta muerto entonces vamos a devolver algo aqui\r\n            if (status === \"Dead\") {\r\n              return <div>{status}</div>;\r\n            } else if (status === \"Alive\") {\r\n              return <div>{status}</div>;\r\n            } else {\r\n              return <div>{status}</div>;\r\n            }\r\n          })()}\r\n        </Link>\r\n      );\r\n    });\r\n  } else {\r\n    display = \" No Characters Found :/\";\r\n  }\r\n\r\n  return <>{display}</>;\r\n};\r\n\r\nexport default Cards;\r\n\r\n// export default function Card({ image, name, temperaments, weight }) {\r\n//   return (\r\n//     <div>\r\n//       <img src={image} alt=\"img not found\" width=\"200px\" height=\"250px\" />\r\n//       <h3>{name}</h3>\r\n//       <h5>{temperaments}</h5>\r\n//       <h5>{weight}</h5>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,KAAK,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAC9B,IAAIG,OAAO;EACXC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EAEpB,IAAIA,OAAO,EAAE;IACXE,OAAO,GAAGF,OAAO,CAACK,GAAG,CAAEC,IAAI,IAAK;MAC9B,IAAI;QAAEC,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAO,CAAC,GAAGL,IAAI;MAChD,oBACEX,OAAA,CAACF,IAAI;QACHmB,KAAK,EAAE;UAAEC,cAAc,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAClDC,EAAE,EAAG,GAAEd,IAAK,GAAEM,EAAG,EAAE;QAEnBS,SAAS,EAAC,6DAA6D;QAAAC,QAAA,gBAEvEtB,OAAA;UAAAsB,QAAA,gBACEtB,OAAA;YAAKuB,GAAG,EAAET,KAAM;YAACU,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAC1B5B,OAAA;YAAKqB,SAAS,EAAC,SAAS;YAAAC,QAAA,eACtBtB,OAAA;cAAKqB,SAAS,EAAC,EAAE;cAAAC,QAAA,gBACftB,OAAA;gBAAKqB,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAgB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eAC5C5B,OAAA;gBAAKqB,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAEP,QAAQ,CAACF;cAAI;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAO;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACvC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,EAEL,CAAC,MAAM;UACN;UACA,IAAIZ,MAAM,KAAK,MAAM,EAAE;YACrB,oBAAOhB,OAAA;cAAAsB,QAAA,EAAMN;YAAM;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAC5B,CAAC,MAAM,IAAIZ,MAAM,KAAK,OAAO,EAAE;YAC7B,oBAAOhB,OAAA;cAAAsB,QAAA,EAAMN;YAAM;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAC5B,CAAC,MAAM;YACL,oBAAO5B,OAAA;cAAAsB,QAAA,EAAMN;YAAM;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAC5B;QACF,CAAC,GAAG;MAAA,GAtBChB,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAuBF;IAEX,CAAC,CAAC;EACJ,CAAC,MAAM;IACLrB,OAAO,GAAG,yBAAyB;EACrC;EAEA,oBAAOP,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EAAGf;EAAO,iBAAI;AACvB,CAAC;AAACsB,EAAA,GA1CI1B,KAAK;AA4CX,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}