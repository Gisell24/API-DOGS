{"ast":null,"code":"import {\n// GET_ALL_DOGS,\n// GET_DOG_BY_NAME,\n// ORDER_BY_NAME,\nGET_TEMPERAMENTS, ORDER_BY_TEMPERAMENT, GET_DOGS\n// FILTER_BY_CREATED,\n// GET_DOG_BY_ID,\n// CLEAR_DETAILS,\n// POST_DOG,\n// ORDER_BY_WEIGHT,\n// ERROR_IN_NAME,\n// CLEAR_ERROR,\n// ERROR_IN_POST,\n// DELETE_DOG,\n} from \"../actions\";\nconst initialState = {\n  dogs: [],\n  allDogs: [],\n  //declaro un estado q siempre va a tener todos los perros\n  temperament: [],\n  detail: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_DOGS\":\n      return {\n        ...state,\n        //guardo el estado\n        dogs: action.payload,\n        //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\n        allDogs: action.payload //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\n      };\n\n    case GET_TEMPERAMENTS:\n      return {\n        ...state,\n        temperaments: action.payload\n      };\n    case ORDER_BY_TEMPERAMENT:\n      const allDogs = state.allDogs;\n      let isFound = null;\n      const filteredByTemperament = action.payload === \"All\" ? allDogs :\n      // eslint-disable-next-line array-callback-return\n      allDogs.filter(dog => {\n        if (dog.hasOwnProperty(\"temperament\")) {\n          var _dog$temperament;\n          return (_dog$temperament = dog.temperament) === null || _dog$temperament === void 0 ? void 0 : _dog$temperament.includes(action.payload.trim());\n        }\n        if (dog.hasOwnProperty(\"temperaments\")) {\n          var _dog$temperaments;\n          isFound = (_dog$temperaments = dog.temperaments) === null || _dog$temperaments === void 0 ? void 0 : _dog$temperaments.some(element => {\n            if (element.name === action.payload) {\n              return true;\n            }\n            return false;\n          });\n          if (isFound) {\n            return dog;\n          }\n        }\n      });\n      return {\n        ...state,\n        dogs: filteredByTemperament\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n\n// function rootReducer(state = initialState, action) {\n//   // eslint-disable-next-line default-case\n//   switch (action.type) {\n//     case \"GET_DOGS\":\n//       return {\n//         ...state, //guardo el estado\n//         dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\n//         allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\n//       };\n\n//     case \"GET_DOG_NAME\":\n//       return {\n//         ...state,\n//         dogs: action.payload, //es el arreglo q estoy renderizando\n//       };\n\n//     case \"GET_TEMPERAMENT\":\n//       return {\n//         ...state,\n//         temperament: action.payload,\n//       };\n\n//     case \"POST_DOG\":\n//       return {\n//         ...state,\n//       };\n\n//     case \"FILTER_BY_TEMPERAMENT\":\n//       const allBreeds = state.dogs; //aca tb para el filtro desde todos\n//       const temperamentFiltered =\n//         action.payload === \"All\"\n//           ? state.allDogs\n//           : allBreeds.filter((el) => {\n//               return el.temperament\n//                 ? el.temperament.includes(action.payload)\n//                 : el.temperaments\n//                     ?.map((ele) => ele.name)\n//                     .includes(action.payload);\n//             });\n//       return {\n//         ...state, //me traiego todo lo de estado\n//         dogs: temperamentFiltered,\n//       };\n//   }\n// }\n\n// export default rootReducer;","map":{"version":3,"names":["GET_TEMPERAMENTS","ORDER_BY_TEMPERAMENT","GET_DOGS","initialState","dogs","allDogs","temperament","detail","rootReducer","state","arguments","length","undefined","action","type","payload","temperaments","isFound","filteredByTemperament","filter","dog","hasOwnProperty","_dog$temperament","includes","trim","_dog$temperaments","some","element","name"],"sources":["C:/Users/CX/OneDrive/Escritorio/PI-Dogs-main/client/src/reducer/index.js"],"sourcesContent":["import {\r\n  // GET_ALL_DOGS,\r\n  // GET_DOG_BY_NAME,\r\n  // ORDER_BY_NAME,\r\n  GET_TEMPERAMENTS,\r\n  ORDER_BY_TEMPERAMENT,\r\n  GET_DOGS,\r\n  // FILTER_BY_CREATED,\r\n  // GET_DOG_BY_ID,\r\n  // CLEAR_DETAILS,\r\n  // POST_DOG,\r\n  // ORDER_BY_WEIGHT,\r\n  // ERROR_IN_NAME,\r\n  // CLEAR_ERROR,\r\n  // ERROR_IN_POST,\r\n  // DELETE_DOG,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  dogs: [],\r\n  allDogs: [], //declaro un estado q siempre va a tener todos los perros\r\n  temperament: [],\r\n  detail: [],\r\n};\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_DOGS\":\r\n      return {\r\n        ...state, //guardo el estado\r\n        dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\r\n        allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\r\n      };\r\n    case GET_TEMPERAMENTS:\r\n      return {\r\n        ...state,\r\n        temperaments: action.payload,\r\n      };\r\n    case ORDER_BY_TEMPERAMENT:\r\n      const allDogs = state.allDogs;\r\n      let isFound = null;\r\n      const filteredByTemperament =\r\n        action.payload === \"All\"\r\n          ? allDogs\r\n          : // eslint-disable-next-line array-callback-return\r\n            allDogs.filter((dog) => {\r\n              if (dog.hasOwnProperty(\"temperament\")) {\r\n                return dog.temperament?.includes(action.payload.trim());\r\n              }\r\n              if (dog.hasOwnProperty(\"temperaments\")) {\r\n                isFound = dog.temperaments?.some((element) => {\r\n                  if (element.name === action.payload) {\r\n                    return true;\r\n                  }\r\n                  return false;\r\n                });\r\n                if (isFound) {\r\n                  return dog;\r\n                }\r\n              }\r\n            });\r\n      return {\r\n        ...state,\r\n        dogs: filteredByTemperament,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n// function rootReducer(state = initialState, action) {\r\n//   // eslint-disable-next-line default-case\r\n//   switch (action.type) {\r\n//     case \"GET_DOGS\":\r\n//       return {\r\n//         ...state, //guardo el estado\r\n//         dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\r\n//         allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\r\n//       };\r\n\r\n//     case \"GET_DOG_NAME\":\r\n//       return {\r\n//         ...state,\r\n//         dogs: action.payload, //es el arreglo q estoy renderizando\r\n//       };\r\n\r\n//     case \"GET_TEMPERAMENT\":\r\n//       return {\r\n//         ...state,\r\n//         temperament: action.payload,\r\n//       };\r\n\r\n//     case \"POST_DOG\":\r\n//       return {\r\n//         ...state,\r\n//       };\r\n\r\n//     case \"FILTER_BY_TEMPERAMENT\":\r\n//       const allBreeds = state.dogs; //aca tb para el filtro desde todos\r\n//       const temperamentFiltered =\r\n//         action.payload === \"All\"\r\n//           ? state.allDogs\r\n//           : allBreeds.filter((el) => {\r\n//               return el.temperament\r\n//                 ? el.temperament.includes(action.payload)\r\n//                 : el.temperaments\r\n//                     ?.map((ele) => ele.name)\r\n//                     .includes(action.payload);\r\n//             });\r\n//       return {\r\n//         ...state, //me traiego todo lo de estado\r\n//         dogs: temperamentFiltered,\r\n//       };\r\n//   }\r\n// }\r\n\r\n// export default rootReducer;\r\n"],"mappings":"AAAA;AACE;AACA;AACA;AACAA,gBAAgB,EAChBC,oBAAoB,EACpBC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,OACK,YAAY;AAEnB,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE;AACV,CAAC;AACD,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGL,KAAK;QAAE;QACVL,IAAI,EAAES,MAAM,CAACE,OAAO;QAAE;QACtBV,OAAO,EAAEQ,MAAM,CAACE,OAAO,CAAE;MAC3B,CAAC;;IACH,KAAKf,gBAAgB;MACnB,OAAO;QACL,GAAGS,KAAK;QACRO,YAAY,EAAEH,MAAM,CAACE;MACvB,CAAC;IACH,KAAKd,oBAAoB;MACvB,MAAMI,OAAO,GAAGI,KAAK,CAACJ,OAAO;MAC7B,IAAIY,OAAO,GAAG,IAAI;MAClB,MAAMC,qBAAqB,GACzBL,MAAM,CAACE,OAAO,KAAK,KAAK,GACpBV,OAAO;MACP;MACAA,OAAO,CAACc,MAAM,CAAEC,GAAG,IAAK;QACtB,IAAIA,GAAG,CAACC,cAAc,CAAC,aAAa,CAAC,EAAE;UAAA,IAAAC,gBAAA;UACrC,QAAAA,gBAAA,GAAOF,GAAG,CAACd,WAAW,cAAAgB,gBAAA,uBAAfA,gBAAA,CAAiBC,QAAQ,CAACV,MAAM,CAACE,OAAO,CAACS,IAAI,EAAE,CAAC;QACzD;QACA,IAAIJ,GAAG,CAACC,cAAc,CAAC,cAAc,CAAC,EAAE;UAAA,IAAAI,iBAAA;UACtCR,OAAO,IAAAQ,iBAAA,GAAGL,GAAG,CAACJ,YAAY,cAAAS,iBAAA,uBAAhBA,iBAAA,CAAkBC,IAAI,CAAEC,OAAO,IAAK;YAC5C,IAAIA,OAAO,CAACC,IAAI,KAAKf,MAAM,CAACE,OAAO,EAAE;cACnC,OAAO,IAAI;YACb;YACA,OAAO,KAAK;UACd,CAAC,CAAC;UACF,IAAIE,OAAO,EAAE;YACX,OAAOG,GAAG;UACZ;QACF;MACF,CAAC,CAAC;MACR,OAAO;QACL,GAAGX,KAAK;QACRL,IAAI,EAAEc;MACR,CAAC;IAEH;MACE,OAAOT,KAAK;EAAC;AAEnB;AAEA,eAAeD,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}