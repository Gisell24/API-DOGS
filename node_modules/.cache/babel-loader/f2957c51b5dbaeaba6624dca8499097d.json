{"ast":null,"code":"import _objectSpread from\"C:/Users/CX/OneDrive/Escritorio/PI-Dogs-main/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var initialState={dogs:[],allDogs:[],//declaro un estado q siempre va a tener todos los perros\ntemperament:[],detail:[]};function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;// eslint-disable-next-line default-case\nswitch(action.type){case\"GET_DOGS\":return _objectSpread(_objectSpread({},state),{},{//guardo el estado\ndogs:action.payload//en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\n});default:return state;}}export default rootReducer;// function rootReducer(state = initialState, action) {\n//   // eslint-disable-next-line default-case\n//   switch (action.type) {\n//     case \"GET_DOGS\":\n//       return {\n//         ...state, //guardo el estado\n//         dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\n//         allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\n//       };\n//     case \"GET_DOG_NAME\":\n//       return {\n//         ...state,\n//         dogs: action.payload, //es el arreglo q estoy renderizando\n//       };\n//     case \"GET_TEMPERAMENT\":\n//       return {\n//         ...state,\n//         temperament: action.payload,\n//       };\n//     case \"POST_DOG\":\n//       return {\n//         ...state,\n//       };\n//     case \"FILTER_BY_TEMPERAMENT\":\n//       const allBreeds = state.dogs; //aca tb para el filtro desde todos\n//       const temperamentFiltered =\n//         action.payload === \"All\"\n//           ? state.allDogs\n//           : allBreeds.filter((el) => {\n//               return el.temperament\n//                 ? el.temperament.includes(action.payload)\n//                 : el.temperaments\n//                     ?.map((ele) => ele.name)\n//                     .includes(action.payload);\n//             });\n//       return {\n//         ...state, //me traiego todo lo de estado\n//         dogs: temperamentFiltered,\n//       };\n//   }\n// }\n// export default rootReducer;","map":{"version":3,"names":["initialState","dogs","allDogs","temperament","detail","rootReducer","state","arguments","length","undefined","action","type","_objectSpread","payload"],"sources":["C:/Users/CX/OneDrive/Escritorio/PI-Dogs-main/client/src/reducer/index.js"],"sourcesContent":["const initialState = {\r\n  dogs: [],\r\n  allDogs: [], //declaro un estado q siempre va a tener todos los perros\r\n  temperament: [],\r\n  detail: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case \"GET_DOGS\":\r\n      return {\r\n        ...state, //guardo el estado\r\n        dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n// function rootReducer(state = initialState, action) {\r\n//   // eslint-disable-next-line default-case\r\n//   switch (action.type) {\r\n//     case \"GET_DOGS\":\r\n//       return {\r\n//         ...state, //guardo el estado\r\n//         dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\r\n//         allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\r\n//       };\r\n\r\n//     case \"GET_DOG_NAME\":\r\n//       return {\r\n//         ...state,\r\n//         dogs: action.payload, //es el arreglo q estoy renderizando\r\n//       };\r\n\r\n//     case \"GET_TEMPERAMENT\":\r\n//       return {\r\n//         ...state,\r\n//         temperament: action.payload,\r\n//       };\r\n\r\n//     case \"POST_DOG\":\r\n//       return {\r\n//         ...state,\r\n//       };\r\n\r\n//     case \"FILTER_BY_TEMPERAMENT\":\r\n//       const allBreeds = state.dogs; //aca tb para el filtro desde todos\r\n//       const temperamentFiltered =\r\n//         action.payload === \"All\"\r\n//           ? state.allDogs\r\n//           : allBreeds.filter((el) => {\r\n//               return el.temperament\r\n//                 ? el.temperament.includes(action.payload)\r\n//                 : el.temperaments\r\n//                     ?.map((ele) => ele.name)\r\n//                     .includes(action.payload);\r\n//             });\r\n//       return {\r\n//         ...state, //me traiego todo lo de estado\r\n//         dogs: temperamentFiltered,\r\n//       };\r\n//   }\r\n// }\r\n\r\n// export default rootReducer;\r\n"],"mappings":"wIAAA,GAAM,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EAAE,CACRC,OAAO,CAAE,EAAE,CAAE;AACbC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EACV,CAAC,CAED,QAAS,CAAAC,WAAWA,CAAA,CAA+B,IAA9B,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGP,YAAY,IAAE,CAAAU,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC/C;AACA,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,UAAU,CACb,OAAAC,aAAA,CAAAA,aAAA,IACKN,KAAK,MAAE;AACVL,IAAI,CAAES,MAAM,CAACG,OAAS;AAAA,GAE1B,QACE,MAAO,CAAAP,KAAK,CAAC,CAEnB,CAEA,cAAe,CAAAD,WAAW,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}