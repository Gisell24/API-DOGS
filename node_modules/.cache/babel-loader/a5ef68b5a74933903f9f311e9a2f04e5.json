{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CX\\\\OneDrive\\\\Escritorio\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\Card.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Card = _ref => {\n  let {\n    dogs\n  } = _ref;\n  let display;\n  console.log(dogs);\n  if (dogs) {\n    display = dogs.map(dog => {\n      let {\n        id,\n        name,\n        image,\n        temperaments,\n        weight\n      } = dog;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `${id}`,\n        className: \"col-lg-4 col-md-6 col12  mb-4 position-relative text-subtle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"img not found\",\n            width: \"200px\",\n            height: \"250px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: temperaments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), (() => {\n          //si el estado del persona esta muerto entonces vamos a devolver algo aqui\n          if (temperaments === id) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: temperaments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 22\n            }, this);\n          } else if (temperaments === name) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: temperaments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: temperaments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 22\n            }, this);\n          }\n        })()]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    display = \" No Dogs Found :/\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n_c = Card;\nexport default Card;\n\n// export default function Card({ image, name, temperaments, weight }) {\n//   return (\n//     <div>\n//       <img src={image} alt=\"img not found\" width=\"200px\" height=\"250px\" />\n//       <h3>{name}</h3>\n//       <h5>{temperaments}</h5>\n//       <h5>{weight}</h5>\n//     </div>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","_ref","dogs","display","console","log","map","dog","id","name","image","temperaments","weight","to","className","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CX/OneDrive/Escritorio/PI-Dogs-main/client/src/components/Card.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ dogs }) => {\r\n  let display;\r\n  console.log(dogs);\r\n\r\n  if (dogs) {\r\n    display = dogs.map((dog) => {\r\n      let { id, name, image, temperaments, weight } = dog;\r\n      return (\r\n        <Link\r\n          to={`${id}`}\r\n          key={id}\r\n          className=\"col-lg-4 col-md-6 col12  mb-4 position-relative text-subtle\"\r\n        >\r\n          <div>\r\n            <img src={image} alt=\"img not found\" width=\"200px\" height=\"250px\" />\r\n            <h3>{name}</h3>\r\n            <h5>{temperaments}</h5>\r\n            <h5>{weight}</h5>\r\n          </div>\r\n\r\n          {(() => {\r\n            //si el estado del persona esta muerto entonces vamos a devolver algo aqui\r\n            if (temperaments === id) {\r\n              return <div>{temperaments}</div>;\r\n            } else if (temperaments === name) {\r\n              return <div>{temperaments}</div>;\r\n            } else {\r\n              return <div>{temperaments}</div>;\r\n            }\r\n          })()}\r\n        </Link>\r\n      );\r\n    });\r\n  } else {\r\n    display = \" No Dogs Found :/\";\r\n  }\r\n\r\n  return <>{display}</>;\r\n};\r\n\r\nexport default Card;\r\n\r\n// export default function Card({ image, name, temperaments, weight }) {\r\n//   return (\r\n//     <div>\r\n//       <img src={image} alt=\"img not found\" width=\"200px\" height=\"250px\" />\r\n//       <h3>{name}</h3>\r\n//       <h5>{temperaments}</h5>\r\n//       <h5>{weight}</h5>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,IAAI,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACpB,IAAIE,OAAO;EACXC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,IAAIA,IAAI,EAAE;IACRC,OAAO,GAAGD,IAAI,CAACI,GAAG,CAAEC,GAAG,IAAK;MAC1B,IAAI;QAAEC,EAAE;QAAEC,IAAI;QAAEC,KAAK;QAAEC,YAAY;QAAEC;MAAO,CAAC,GAAGL,GAAG;MACnD,oBACEV,OAAA,CAACF,IAAI;QACHkB,EAAE,EAAG,GAAEL,EAAG,EAAE;QAEZM,SAAS,EAAC,6DAA6D;QAAAC,QAAA,gBAEvElB,OAAA;UAAAkB,QAAA,gBACElB,OAAA;YAAKmB,GAAG,EAAEN,KAAM;YAACO,GAAG,EAAC,eAAe;YAACC,KAAK,EAAC,OAAO;YAACC,MAAM,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACpE1B,OAAA;YAAAkB,QAAA,EAAKN;UAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACf1B,OAAA;YAAAkB,QAAA,EAAKJ;UAAY;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACvB1B,OAAA;YAAAkB,QAAA,EAAKH;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACb,EAEL,CAAC,MAAM;UACN;UACA,IAAIZ,YAAY,KAAKH,EAAE,EAAE;YACvB,oBAAOX,OAAA;cAAAkB,QAAA,EAAMJ;YAAY;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAClC,CAAC,MAAM,IAAIZ,YAAY,KAAKF,IAAI,EAAE;YAChC,oBAAOZ,OAAA;cAAAkB,QAAA,EAAMJ;YAAY;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAClC,CAAC,MAAM;YACL,oBAAO1B,OAAA;cAAAkB,QAAA,EAAMJ;YAAY;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAO;UAClC;QACF,CAAC,GAAG;MAAA,GAnBCf,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAoBF;IAEX,CAAC,CAAC;EACJ,CAAC,MAAM;IACLpB,OAAO,GAAG,mBAAmB;EAC/B;EAEA,oBAAON,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EAAGZ;EAAO,iBAAI;AACvB,CAAC;AAACqB,EAAA,GAtCIxB,IAAI;AAwCV,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}