{"ast":null,"code":"const initialState = {\n  dogs: [],\n  allDogs: [],\n  //declaro un estado q siempre va a tener todos los perros\n  temperament: [],\n  detail: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case \"GET_DOGS\":\n      return {\n        ...state,\n        //guardo el estado\n        dogs: action.payload //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\n      };\n\n    case \"FILTER_BY_TEMPERAMENTS\":\n      const allDogs = state.dogs;\n      const temperamentsFiltered = action.payload === \"All\" ? allDogs : allDogs;\n      return {};\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n\n// function rootReducer(state = initialState, action) {\n//   // eslint-disable-next-line default-case\n//   switch (action.type) {\n//     case \"GET_DOGS\":\n//       return {\n//         ...state, //guardo el estado\n//         dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\n//         allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\n//       };\n\n//     case \"GET_DOG_NAME\":\n//       return {\n//         ...state,\n//         dogs: action.payload, //es el arreglo q estoy renderizando\n//       };\n\n//     case \"GET_TEMPERAMENT\":\n//       return {\n//         ...state,\n//         temperament: action.payload,\n//       };\n\n//     case \"POST_DOG\":\n//       return {\n//         ...state,\n//       };\n\n//     case \"FILTER_BY_TEMPERAMENT\":\n//       const allBreeds = state.dogs; //aca tb para el filtro desde todos\n//       const temperamentFiltered =\n//         action.payload === \"All\"\n//           ? state.allDogs\n//           : allBreeds.filter((el) => {\n//               return el.temperament\n//                 ? el.temperament.includes(action.payload)\n//                 : el.temperaments\n//                     ?.map((ele) => ele.name)\n//                     .includes(action.payload);\n//             });\n//       return {\n//         ...state, //me traiego todo lo de estado\n//         dogs: temperamentFiltered,\n//       };\n//   }\n// }\n\n// export default rootReducer;","map":{"version":3,"names":["initialState","dogs","allDogs","temperament","detail","rootReducer","state","arguments","length","undefined","action","type","payload","temperamentsFiltered"],"sources":["C:/Users/CX/OneDrive/Escritorio/PI-Dogs-main/client/src/reducer/index.js"],"sourcesContent":["const initialState = {\r\n  dogs: [],\r\n  allDogs: [], //declaro un estado q siempre va a tener todos los perros\r\n  temperament: [],\r\n  detail: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case \"GET_DOGS\":\r\n      return {\r\n        ...state, //guardo el estado\r\n        dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\r\n      };\r\n    case \"FILTER_BY_TEMPERAMENTS\":\r\n      const allDogs = state.dogs;\r\n      const temperamentsFiltered = action.payload === \"All\" ? allDogs : allDogs;\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n// function rootReducer(state = initialState, action) {\r\n//   // eslint-disable-next-line default-case\r\n//   switch (action.type) {\r\n//     case \"GET_DOGS\":\r\n//       return {\r\n//         ...state, //guardo el estado\r\n//         dogs: action.payload, //en mi estado dogs, q en un ppio es un estado vacío, mandà todo lo q te mande la acción de dogs\r\n//         allDogs: action.payload, //acá tb me guarda todos los perros para q pueda usarlo cdo filtro y q me los cargue a todos de nuevo, y no sobre el filtro del filtro\r\n//       };\r\n\r\n//     case \"GET_DOG_NAME\":\r\n//       return {\r\n//         ...state,\r\n//         dogs: action.payload, //es el arreglo q estoy renderizando\r\n//       };\r\n\r\n//     case \"GET_TEMPERAMENT\":\r\n//       return {\r\n//         ...state,\r\n//         temperament: action.payload,\r\n//       };\r\n\r\n//     case \"POST_DOG\":\r\n//       return {\r\n//         ...state,\r\n//       };\r\n\r\n//     case \"FILTER_BY_TEMPERAMENT\":\r\n//       const allBreeds = state.dogs; //aca tb para el filtro desde todos\r\n//       const temperamentFiltered =\r\n//         action.payload === \"All\"\r\n//           ? state.allDogs\r\n//           : allBreeds.filter((el) => {\r\n//               return el.temperament\r\n//                 ? el.temperament.includes(action.payload)\r\n//                 : el.temperaments\r\n//                     ?.map((ele) => ele.name)\r\n//                     .includes(action.payload);\r\n//             });\r\n//       return {\r\n//         ...state, //me traiego todo lo de estado\r\n//         dogs: temperamentFiltered,\r\n//       };\r\n//   }\r\n// }\r\n\r\n// export default rootReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,EAAE;EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,WAAWA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C;EACA,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGL,KAAK;QAAE;QACVL,IAAI,EAAES,MAAM,CAACE,OAAO,CAAE;MACxB,CAAC;;IACH,KAAK,wBAAwB;MAC3B,MAAMV,OAAO,GAAGI,KAAK,CAACL,IAAI;MAC1B,MAAMY,oBAAoB,GAAGH,MAAM,CAACE,OAAO,KAAK,KAAK,GAAGV,OAAO,GAAGA,OAAO;MACzE,OAAO,CAAC,CAAC;IACX;MACE,OAAOI,KAAK;EAAC;AAEnB;AAEA,eAAeD,WAAW;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}